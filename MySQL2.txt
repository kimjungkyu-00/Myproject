데이터 정의문 : CREATE , ALTER , DROP
데이터 제어문 : GRWANT,  REVOKE
데이터 조작문 : SELECT ,  INSERT ,  DELETF
쿼리(Query) : SELECT
트랙잭션 (Tracnsaction)처리  : COMMIT , ROLLBACK

¤ 데이터 타입(Data Type) - MySQL
n 날짜 및 시간 타입
n DATE : 3 bytes
n DATETIME : 8 bytes
n TIMESTAMP : 4 bytes


생성ex 
1.
테이블 생성- CREATE문
작성 예
create table member(
 id varchar(50) not null primary key,
 passwd varchar(16) not null,
 name varchar(10) not null,
 reg_date datetime not null
);

2.
 테이블 수정- ALTER문
 테이블의 필드를 추가하는 ALTER문의 일반형
ALTER TABLE table_name
ADD (add_col_name1 type [DEFAULT] [NOT
NULL/NULL],
.... add_col_name3 type );
  작성 예
alter table member
add (address varchar(100) not null,
tel varchar(20) not null);

3.
 레코드 추가 - INSERT문
 레코드를 추가하는 쿼리의 일반형
INSERT INTO table_name (col_name1,col_name2...)
VALUES (col_value1, col_value2...)
 사용 예
insert into member(id, passwd, name, reg_date)
values('kingdora@dragon.com','1234','김개동', now());

4.
레코드 검색 - SELECT문
n 레코드를 검색하는 쿼리의 일반형
SELECT col_name1,col_name2
FROM table_name;
n 사용 예
select * from member;

5.
 레코드 수정 - UPDATE문
 레코드를 수정하는 쿼리의 일반형
UPDATE table_name SET col_name = value,.....
WHERE condition;
사용 예
update member set passwd='3579' where id='abc';

6.
 레코드 삭제 - DELETE문
 테이블에 저장되어 있는 레코드를 삭제하는 쿼리의 일반형
DELETE FROM table_name
WHERE condition;
 사용 예
delete from member where id='abc'




insert, update, delete는 executeUpdate() 를 호출하여 쿼리를 실행한다.



-----------------------------------------------------

테이블 생성

create table [테이블명](id int,name varchar(20));



컬럼 추가

alter table [테이블명] add [컬럼명] [타입] [옵션]; 

ex) alter table [테이블명] add [컬럼명] varchar(100) not null default '0'; 



컬럼 삭제

alter table [테이블명] drop [컬럼명];



컬럼명 변경 및 타입 변경

alter table [테이블명] change [컬럼명] [변경할컬럼명] varchar(12);

컬럼 타입 수정

alter table [테이블명] modify [컬럼명] varchar(14);



테이블명 수정

alter table [테이블명] rename [변경할테이블명];



테이블 삭제

drop table [테이블명];






-----------------------------------------------------
load data local infile '파일경로'

into table pet

fields terminated by '컬럼구분 값'

lines terminated by '행구분'3





  @RequestMapping(value="/update/{no}",method=RequestMethod.POST)
   public String update(@PathVariable String no,  Model model) {   
      BorderDao dao = new BorderDao();
      System.out.println("update : ");
      String nextPage = "home";
      Border border = dao.get(Integer.parseInt(no));
      if(border != null) {
         //System.out.println(border);
         nextPage = "border/updateform";
         model.addAttribute("content", border);
         
      }
      return nextPage;
   }